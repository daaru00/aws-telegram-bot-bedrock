StartAt: AcquireLock
States:
  AcquireLock:
    Type: Task
    Resource: arn:aws:states:::aws-sdk:dynamodb:putItem
    Parameters:
      TableName: ${StatusTableName}
      Item:
        chat_id:
          N.$: "States.Format('{}',$.detail.message.chat.id)"
      ConditionExpression: attribute_not_exists(#chat_id)
      ExpressionAttributeNames:
        "#chat_id": chat_id
    Retry:
      - ErrorEquals:
          - DynamoDb.ConditionalCheckFailedException
        IntervalSeconds: 5
        MaxAttempts: 10
    Catch:
      - ErrorEquals:
          - DynamoDb.ConditionalCheckFailedException
        Next: ProcessLocked
    ResultPath: null
    Next: SetDefaultToolResponses

  ProcessLocked:
    Type: Pass
    End: true

  SetDefaultToolResponses:
    Type: Pass
    Parameters:
      toolUses: []
      toolResults: []
    ResultPath: $.response
    Next: SendPreGenerateTyping

  SendPreGenerateTyping:
    Type: Task
    Resource: 'arn:aws:states:::events:putEvents'
    Parameters:
      Entries:
        - EventBusName: ${EventBusName}
          Source: ${EventSource}
          DetailType: Send Chat Action
          Detail:
            chat_id.$: $.detail.message.chat.id
            action: typing
    ResultPath: null
    Next: GetResponse

  GetResponse:
    Type: Task
    Resource: '${MessageFunctionArn}'
    Parameters:
      chat_id.$: $.detail.message.chat.id
      user.$: $.detail.message.from.first_name
      lang.$: $.detail.message.from.language_code
      message.$: $.detail.message
      toolUses.$: $.response.toolUses
      toolResults.$: $.response.toolResults
    Retry:
      - ErrorEquals:
          - "ThrottlingException"
        IntervalSeconds: 10
        JitterStrategy: FULL
        MaxAttempts: 5
    Catch:
      - ErrorEquals:
          - "States.ALL"
        ResultPath: $.error
        Next: GetErrorResponse
    ResultPath: $.response
    Next: CheckTools

  CheckTools:
    Type: Choice
    Choices:
      - Variable: $.response.stopReason
        StringEquals: "tool_use"
        Next: SendPreToolsTyping
    Default: SendResponse

  SendPreToolsTyping:
    Type: Task
    Resource: 'arn:aws:states:::events:putEvents'
    Parameters:
      Entries:
        - EventBusName: ${EventBusName}
          Source: ${EventSource}
          DetailType: Send Chat Action
          Detail:
            chat_id.$: $.detail.message.chat.id
            action: typing
    ResultPath: null
    Next: LoopOverTools

  LoopOverTools:
    Type: Map
    ItemsPath: $.response.toolUses
    ItemProcessor:
      StartAt: InvokeToolFunction
      States:
        InvokeToolFunction:
          Type: Task
          Resource: "arn:aws:states:::lambda:invoke"
          Parameters:
            FunctionName.$: "States.Format('${ToolFunctionArnPrefix}{}', $.name)"
            Payload.$: $
          OutputPath: $.Payload
          End: true
    Catch:
      - ErrorEquals:
          - "States.ALL"
        ResultPath: $.error
        Next: GetErrorResponse
    ResultPath: $.response.toolResults
    Next: SendPreGenerateTyping

  GetErrorResponse:
    Type: Task
    Resource: '${CompletionFunctionArn}'
    Parameters:
      lang.$: $.detail.message.from.language_code
      text.$: "States.Format('An error occurred during response generation, here the cause:\n\n{}\n\n', $.error.Cause)"
    Retry:
      - ErrorEquals:
        - "ThrottlingException"
        IntervalSeconds: 2
        JitterStrategy: FULL
        MaxAttempts: 10
    ResultPath: $.response
    Next: SendResponse
  
  SendResponse:
    Type: Task
    Resource: 'arn:aws:states:::events:putEvents'
    Parameters:
      Entries:
        - EventBusName: ${EventBusName}
          Source: ${EventSource}
          DetailType: Send Message
          Detail:
            chat_id.$: $.detail.message.chat.id
            text.$: $.response.text
    ResultPath: null
    Next: ReleaseLock

  ReleaseLock:
    Type: Task
    Resource: arn:aws:states:::aws-sdk:dynamodb:deleteItem
    Parameters:
      TableName: ${StatusTableName}
      Key:
        chat_id:
          N.$: "States.Format('{}',$.detail.message.chat.id)"
    End: true
